import React from 'react';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom'
import { makeStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import Toolbar from '@material-ui/core/Toolbar';
import IconButton from '@material-ui/core/IconButton';
import { Button } from '@material-ui/core';
import MenuItem from '@material-ui/core/MenuItem';
import Menu from '@material-ui/core/Menu';
import MoreIcon from '@material-ui/icons/MoreVert';
import { userActions } from '../_actions';


const useStyles = makeStyles(theme => ({
  grow1: {
    flexGrow: 0.1,
  },
  grow: {
    flexGrow: 0.8,
  },
  menuButton: {
    marginRight: theme.spacing(2),
  },
  title: {
    display: 'none',
    [theme.breakpoints.up('sm')]: {
      display: 'block',
    },
  },
  sectionDesktop: {
    display: 'none',
    [theme.breakpoints.up('md')]: {
      display: 'flex',
    },
    color: '#ffffff9e',
  },
  sectionMobile: {
    display: 'flex',
    [theme.breakpoints.up('md')]: {
      display: 'none',
    },
    color: '#ffffff9e',
  },
}));

function PrimarySearchAppBar(props) {
  console.log("adslfjaldjfl::::   ", props.registration.login);
  const classes = useStyles();
  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);
  const [currentMenu, setCurrentMenu] = React.useState(props.registration);

  if (props.registration.menu) {
    if (currentMenu !== props.registration.menu.payload)
      setCurrentMenu(props.registration.menu.payload);
  }

  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);

  function routeChange(path) {
    props.history.push(path);
  }

  function goLogout() {
    const { dispatch } = props;
    dispatch(userActions.logout());
    // userActions.logout();
  }

  function handleMobileMenuClose() {
    setMobileMoreAnchorEl(null);
  }

  function handleMobileMenuOpen(event) {
    setMobileMoreAnchorEl(event.currentTarget);
  }

  const mobileMenuId = 'primary-search-account-menu-mobile';
  const renderMobileMenu = (
    <Menu
      anchorEl={mobileMoreAnchorEl}
      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}
      id={mobileMenuId}
      keepMounted
      transformOrigin={{ vertical: 'top', horizontal: 'right' }}
      open={isMobileMenuOpen}
      onClose={handleMobileMenuClose}
    >
      <MenuItem>
        <Button color="grey" className={`txt-transform`} onClick={() => routeChange('/Home')}>Home</Button>
      </MenuItem>
      <MenuItem>
        <Button color="grey" className="txt-transform" onClick={() => routeChange('/feeds')}>Feeds</Button>
      </MenuItem>
      {/* <MenuItem>
        <Button color="inherit" className="txt-transform">Statistics</Button>
      </MenuItem> */}
      <MenuItem>
        <Button color="grey" className="txt-transform" onClick={() => routeChange('/about')}>About</Button>
      </MenuItem>
      {props.registration.login.user || props.registration.login.status ?
        (<MenuItem>
          <Button color="grey" className="txt-transform" onClick={() => goLogout()}>Logout</Button>
        </MenuItem>)
        : null
      }

    </Menu>
  );

  function chkCurrent(str) {
    if (currentMenu) {
      if (currentMenu === str)
        return 'current-menu'
    }
    return '';
  }

  return (
    <div className={classes.grow}>
      <AppBar position="static" className={props.className}>
        <Toolbar>
          <div className={classes.grow1} />
          <a href="/Index">
            <img src={require('../img/threat-logo.png')} className='img-title' />
          </a>
          <div className={classes.grow} />
          <div className={classes.sectionDesktop}>
            <Button color="grey" className={`txt-transform ${chkCurrent('Home')}`} onClick={() => routeChange('/Home')}>Home</Button>
            <Button color="grey" className={`txt-transform ${chkCurrent('Feeds')}`} onClick={() => routeChange('/feeds')}>Feeds</Button>
            {/* <Button color="inherit" className="txt-transform">Statistics</Button> */}
            <Button color="grey" className={`txt-transform ${chkCurrent('About')}`} onClick={() => routeChange('/about')}>About</Button>
            {props.registration.login.user || props.registration.login.status ?
              <Button color="grey" className={`txt-logout ${chkCurrent('About')}`} onClick={() => goLogout()}>Logout</Button>
              : null
            }

          </div>
          <div className={classes.sectionMobile}>
            <IconButton
              aria-label="Show more"
              aria-controls={mobileMenuId}
              aria-haspopup="true"
              onClick={handleMobileMenuOpen}
              color="grey"
            >
              <MoreIcon />
            </IconButton>
          </div>
        </Toolbar>
      </AppBar>
      {renderMobileMenu}
    </div>
  );
}

function mapStateToProps(state) {
  const { registration } = state;
  return {
    registration
  };
}

export default withRouter(connect(mapStateToProps, null, null, { pure: false })(PrimarySearchAppBar));

