import React from 'react';
import { connect } from 'react-redux';
import { Grid, TextField, Button, Typography } from '@material-ui/core';
import { chkSessionActions, menuActions } from "../_actions"
import '../theme/feeds.css';

class About extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
        };
    }

    onChange = e => {
        this.setState({
            [e.target.id]: e.target.value
        });
    };

    setMenuState = (type) => {
        const { dispatch } = this.props;
        dispatch(menuActions.setMenu(type));
    }

    componentWillMount() {
        this.setMenuState('About');
    }

    componentWillReceiveProps(nextProps) {
    }

    render() {
        return (
            <div>
                <div className="w90">
                    <Grid container spacing={1} direction="row" justify="center" alignItems="center" className="rowpan">
                        <Grid item xs={11} style={{ marginTop: 50, marginBottom: 10 }}>
                            <Typography className="title-large" color="inherit" >
                                ThreatHaus Feeds
                            </Typography>
                        </Grid>
                        <Grid item xs={11} >
                            <p className="text-small">
                                ThreatHaus Phishing/Malware URLs Data Feed is a real-time data feed of confirmed malicious URLs which can be used as a blocklist/blacklist. The data feed enables companies to protect end users from phishing attacks by blocking or alerting users when they are directed to a phishing site, or receive an email containing a phishing URL.
								<p>
								The feed can be used by CERTs and Blue teamers - by integrating into their security products - anti-virus, firewall, mail and proxy services.</p>
                            </p>
                        </Grid>
                    </Grid>
                    <Grid container spacing={1} direction="row" justify="center" alignItems="center" className="rowpan">
                        <Grid item xs={11} className="caution">
                            <Typography className="caution-title" variant="h4" color="inherit" >
                                Caution!
                            </Typography>
                            <Typography className="caution-text" color="inherit" >
                                Please do not fetch the feed more often than every 15 minutes..
                            </Typography>
                        </Grid>
                    </Grid>
                    <Grid container spacing={1} direction="row" justify="center" alignItems="center" className="rowpan">
                        <Grid item xs={11} style={{ marginTop: 50, marginBottom: 10 }}>
                            <Typography className="title" variant="h4" color="inherit">
                                Country Feed
                            </Typography>
                            <Typography className="text-small" color="inherit" >
                                <p>The <i>Country Feed</i> contains all URLs from the ThreatHaus database whose domain name resolve to an IP address associated with a particular geo IP location (<i>country code</i>), no matter whether the URL is active (online) or not.</p>
                            </Typography>
                            <Typography className="text-small" color="inherit" >
                                <p><b><a href="https://icannwiki.org/Country_code_top-level_domain">Click here</a> for a list of Country Top Level Domains (e.g. .ng, .ke, .za, etc)</b></p>
                            </Typography>
                        </Grid>
                    </Grid>
                    <Grid container spacing={5} direction="row" justify="left" alignItems="left" className="rowpan">
                        <Grid item xs = {1} />
                        <Grid item xs={3} className="search-feed" >
                            <TextField placeholder="NG" inputProps={{style: {padding: 10}}} onChange={this.onChange}
                                id="country_feed" style={{ width: "100%"}} variant="outlined" />
                        </Grid>
                        <Grid item xs = {1}>
                            <Button variant="contained" className="search-btn" onClick={this.generateCountry}>
                                Generate
                            </Button>
                        </Grid>
                    </Grid>
                </div>
            </div>
        );
    }
}

function mapStateToProps(state) {
    const { registration } = state;
    return {
        registration,
    };
}

export default connect(mapStateToProps, null, null, { pure: false })(About);